#===============================================================================
# Template: server-fleet-management-at-scale-inspector.template
#
# Purpose:  Builds Inspector resources:
#           - Inspector resource group
#           - Inspector target
#           - Inspector template
#           - scheduled Inspector assessment runs
#           - Lambda responder functions and related resources
#
#===============================================================================
AWSTemplateFormatVersion: 2010-09-09
Description: "(SO0043ins) - The AWS CloudFormation template for deployment of the Server Fleet Management at Scale [Inspector]. Version %%VERSION%%"

#==================================================
# Metadata
#==================================================
Metadata:

  AWS::CloudFormation::Interface:

    ParameterGroups:
      - Label:
          default: Settings
        Parameters:
          - Environment
          - NotificationEmailAddress

    ParameterLabels:
      Environment:
        default: Managed Hosts Tag Name

      NotificationEmailAddress:
        default: Notification Email Address

#==================================================
# Parameters
#==================================================
Parameters:

  Environment:
    Description: |
      Amazon Inspector enables you to analyze the behavior of your AWS
      resources and helps you to identify potential security issues.
      Using Amazon Inspector, you can define a collection of AWS resources that
      you want to include in an assessment target. You can then create an
      assessment template and launch a security assessment run of this target.
    Type: String
    Default: Sample Fleet

  NotificationEmailAddress:
    Description: |
      Notification email address used to receive Inspector assessment run
      completion notifications. **NOTE**: You will receive a confirmation email
      that you must accept in order to receive these notifications. (This feature
      only applies if you launch the template in a region that supports Inspector.)
    Type: String

  UUID:
    Description: UUID of the solution. Passed from the primary template.
    Type: String

  SendAnonymousData:
    Description: |
      To send or not to send anonymous usage data. Passed from the primary template.
    Type: String

#==================================================
# Conditions
#==================================================
Conditions:

  #==================================================
  # An Inspector SNS email notification will be added
  # if an email address was provided.
  #==================================================
  NotificationEmailAddressIsProvided: !Not [!Equals [!Ref NotificationEmailAddress, ""]]

#==================================================
# Mappings
#==================================================
Mappings:

  #==================================================
  # Sources:
  # http://docs.aws.amazon.com/inspector/latest/userguide/inspector_rules-arns.html for rules ARNs
  # http://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html for Inspector account ARNs for SNS
  #==================================================
  InspectorSettings:
    # Hong Kong
    ap-east-1:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # Tokyo
    ap-northeast-1:
      CVERulesPackage: arn:aws:inspector:ap-northeast-1:406045910587:rulespackage/0-gHP9oWNT
      CISRulesPackage: arn:aws:inspector:ap-northeast-1:406045910587:rulespackage/0-7WNjqgGu
      NetworkReachabilityPackage: arn:aws:inspector:ap-northeast-1:406045910587:rulespackage/0-YI95DVd7
      SecurityBestPracticesRulesPackage: arn:aws:inspector:ap-northeast-1:406045910587:rulespackage/0-bBUQnxMq
      ServiceAccountArn: arn:aws:iam::406045910587:root

    # Seoul
    ap-northeast-2:
      CVERulesPackage: arn:aws:inspector:ap-northeast-2:526946625049:rulespackage/0-PoGHMznc
      CISRulesPackage: arn:aws:inspector:ap-northeast-2:526946625049:rulespackage/0-T9srhg1z
      NetworkReachabilityPackage: arn:aws:inspector:ap-northeast-2:526946625049:rulespackage/0-s3OmLzhL
      SecurityBestPracticesRulesPackage: arn:aws:inspector:ap-northeast-2:526946625049:rulespackage/0-2WRpmi4n
      ServiceAccountArn: arn:aws:iam::526946625049:root

    # Mumbai
    ap-south-1:
      CVERulesPackage: arn:aws:inspector:ap-south-1:162588757376:rulespackage/0-LqnJE9dO
      CISRulesPackage: arn:aws:inspector:ap-south-1:162588757376:rulespackage/0-PSUlX14m
      NetworkReachabilityPackage: arn:aws:inspector:ap-south-1:162588757376:rulespackage/0-YxKfjFu1
      SecurityBestPracticesRulesPackage: arn:aws:inspector:ap-south-1:162588757376:rulespackage/0-fs0IZZBj
      ServiceAccountArn: arn:aws:iam::162588757376:root

    # Singapore
    ap-southeast-1:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # Sydney
    ap-southeast-2:
      CVERulesPackage: arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-D5TGAxiR
      CISRulesPackage: arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-Vkd2Vxjq
      NetworkReachabilityPackage: arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-FLcuV4Gz
      SecurityBestPracticesRulesPackage: arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-asL6HRgN
      ServiceAccountArn: arn:aws:iam::454640832652:root

    # Canada Central
    ca-central-1:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # Frankfurt
    eu-central-1:
      CVERulesPackage: arn:aws:inspector:eu-central-1:537503971621:rulespackage/0-wNqHa8M9
      CISRulesPackage: arn:aws:inspector:eu-central-1:537503971621:rulespackage/0-nZrAVuv8
      NetworkReachabilityPackage: arn:aws:inspector:eu-central-1:537503971621:rulespackage/0-6yunpJ91
      SecurityBestPracticesRulesPackage: arn:aws:inspector:eu-central-1:537503971621:rulespackage/0-ZujVHEPB
      ServiceAccountArn: arn:aws:iam::537503971621:root

    # Stockholm
    eu-north-1:
      CVERulesPackage: arn:aws:inspector:eu-north-1:453420244670:rulespackage/0-IgdgIewd
      CISRulesPackage: arn:aws:inspector:eu-north-1:453420244670:rulespackage/0-Yn8jlX7f
      NetworkReachabilityPackage: arn:aws:inspector:eu-north-1:453420244670:rulespackage/0-52Sn74uu
      SecurityBestPracticesRulesPackage: arn:aws:inspector:eu-north-1:453420244670:rulespackage/0-HfBQSbSf
      ServiceAccountArn: arn:aws:iam::453420244670:root

    # Ireland
    eu-west-1:
      CVERulesPackage: arn:aws:inspector:eu-west-1:357557129151:rulespackage/0-ubA5XvBh
      CISRulesPackage: arn:aws:inspector:eu-west-1:357557129151:rulespackage/0-sJBhCr0F
      NetworkReachabilityPackage: arn:aws:inspector:eu-west-1:357557129151:rulespackage/0-SPzU33xe
      SecurityBestPracticesRulesPackage: arn:aws:inspector:eu-west-1:357557129151:rulespackage/0-SnojL3Z6
      ServiceAccountArn: arn:aws:iam::357557129151:root

    # London
    eu-west-2:
      CVERulesPackage: arn:aws:inspector:eu-west-2:146838936955:rulespackage/0-kZGCqcE1
      CISRulesPackage: arn:aws:inspector:eu-west-2:146838936955:rulespackage/0-IeCjwf1W
      NetworkReachabilityPackage: arn:aws:inspector:eu-west-2:146838936955:rulespackage/0-AizSYyNq
      SecurityBestPracticesRulesPackage: arn:aws:inspector:eu-west-2:146838936955:rulespackage/0-XApUiSaP
      ServiceAccountArn: arn:aws:iam::146838936955:root

    # Paris
    eu-west-3:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # Bahrain
    me-south-1:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # SÃ£o Paulo
    sa-east-1:
      CVERulesPackage: NotSupported
      CISRulesPackage: NotSupported
      NetworkReachabilityPackage: NotSupported
      SecurityBestPracticesRulesPackage: NotSupported
      ServiceAccountArn: NotSupported

    # N. Virginia
    us-east-1:
      CVERulesPackage: arn:aws:inspector:us-east-1:316112463485:rulespackage/0-gEjTy7T7
      CISRulesPackage: arn:aws:inspector:us-east-1:316112463485:rulespackage/0-rExsr2X8
      NetworkReachabilityPackage: arn:aws:inspector:us-east-1:316112463485:rulespackage/0-PmNV0Tcd
      SecurityBestPracticesRulesPackage: arn:aws:inspector:us-east-1:316112463485:rulespackage/0-R01qwB5Q
      ServiceAccountArn: arn:aws:iam::316112463485:root

    # Ohio
    us-east-2:
      CVERulesPackage: arn:aws:inspector:us-east-2:646659390643:rulespackage/0-JnA8Zp85
      CISRulesPackage: arn:aws:inspector:us-east-2:646659390643:rulespackage/0-m8r61nnh
      NetworkReachabilityPackage: arn:aws:inspector:us-east-2:646659390643:rulespackage/0-cE4kTR30
      SecurityBestPracticesRulesPackage: arn:aws:inspector:us-east-2:646659390643:rulespackage/0-AxKmMHPX
      ServiceAccountArn: arn:aws:iam::646659390643:root

    # US Gov East 1
    us-gov-east-1:
      CVERulesPackage: arn:aws-us-gov:inspector:us-gov-east-1:206278770380:rulespackage/0-3IFKFuOb
      CISRulesPackage: arn:aws-us-gov:inspector:us-gov-east-1:206278770380:rulespackage/0-pTLCdIww
      SecurityBestPracticesRulesPackage: arn:aws-us-gov:inspector:us-gov-east-1:206278770380:rulespackage/0-vlgEGcVD
      ServiceAccountArn: arn:aws-us-gov:iam::206278770380:root

    # US Gov West 1
    us-gov-west-1:
      CVERulesPackage: arn:aws-us-gov:inspector:us-gov-west-1:850862329162:rulespackage/0-4oQgcI4G
      CISRulesPackage: arn:aws-us-gov:inspector:us-gov-west-1:850862329162:rulespackage/0-Ac4CFOuc
      SecurityBestPracticesRulesPackage: arn:aws-us-gov:inspector:us-gov-west-1:850862329162:rulespackage/0-rOTGqe5G
      ServiceAccountArn: arn:aws-us-gov:iam::850862329162:root

    # N. California
    us-west-1:
      CVERulesPackage: arn:aws:inspector:us-west-1:166987590008:rulespackage/0-TKgzoVOa
      CISRulesPackage: arn:aws:inspector:us-west-1:166987590008:rulespackage/0-xUY8iRqX
      NetworkReachabilityPackage: arn:aws:inspector:us-west-1:166987590008:rulespackage/0-TxmXimXF
      SecurityBestPracticesRulesPackage: arn:aws:inspector:us-west-1:166987590008:rulespackage/0-byoQRFYm
      ServiceAccountArn: arn:aws:iam::166987590008:root

    # Oregon
    us-west-2:
      CVERulesPackage: arn:aws:inspector:us-west-2:758058086616:rulespackage/0-9hgA516p
      CISRulesPackage: arn:aws:inspector:us-west-2:758058086616:rulespackage/0-H5hpSawc
      NetworkReachabilityPackage: arn:aws:inspector:us-west-2:758058086616:rulespackage/0-rD1z6dpl
      SecurityBestPracticesRulesPackage: arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ
      ServiceAccountArn: arn:aws:iam::758058086616:root

  SourceCode:
    General:
      S3Bucket: "%%BUCKET_NAME%%"
      KeyPrefix: "%%SOLUTION_NAME%%/%%VERSION%%"

#==================================================
# Resources
#==================================================
Resources:

  #==================================================
  #Create an association to update the SSM agent
  #==================================================
  ConfigureInspectorAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: AmazonInspector-ManageAWSAgent
      AssociationName: ManageInspectorAgent
      Parameters:
        Operation:
        - Install
      Targets:
        - Key: tag:Environment
          Values:
          - !Ref Environment
      ScheduleExpression: rate(7 days)

  #==================================================
  # Inspector will post notifications to this SNS topic
  # when assessments are completed.
  # KMS Policy: https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-example
  #==================================================
  SnsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key used for Server Fleet Management Solution SNS
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Sid: default
            Effect: Allow
            Action:
              - kms:*
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Resource: "*"
          - Sid: inspector-access-policy
            Effect: Allow
            Principal:
              Service: inspector.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
          - Sid: inspector-grant-access-policy
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Effect: Allow
            Principal:
              Service: inspector.amazonaws.com
            Resource: "*"
            Condition:
              Bool:
                kms:GrantIsForAWSResource: true

  SnsEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/sfm-sns-encryption-key
      TargetKeyId: !Ref SnsEncryptionKey

  InspectorNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Inspector
      TopicName: inspector-completion-notifications
      KmsMasterKeyId: !Ref SnsEncryptionKey

  # Only add the subscription if an email address was provided.
  InspectorNotificationTopicSubscription:
    Type: AWS::SNS::Subscription
    Condition: NotificationEmailAddressIsProvided
    Properties:
      TopicArn: !Ref InspectorNotificationTopic
      Endpoint: !Ref NotificationEmailAddress
      Protocol: email

  InspectorNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            AWS: !FindInMap [InspectorSettings, !Ref "AWS::Region", ServiceAccountArn]
          Action: sns:Publish
          Resource: !Ref InspectorNotificationTopic
      Topics:
      - !Ref InspectorNotificationTopic

  InspectorAgentIdNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Inspector
      TopicName: inspector-agent-id-notifications
      KmsMasterKeyId: !Ref SnsEncryptionKey

  #pull this out
  InspectorAgentIdNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            AWS: !FindInMap [InspectorSettings, !Ref "AWS::Region", ServiceAccountArn]
          Action: sns:Publish
          Resource: !Ref InspectorAgentIdNotificationTopic
      Topics:
      - !Ref InspectorAgentIdNotificationTopic

  #==================================================
  # The following resources, Lambda function, and custom
  # resource are used to support Inspector.
  #==================================================
  InspectorResourceGroup:
    Type: AWS::Inspector::ResourceGroup
    Properties:
      ResourceGroupTags:
      - Key: Environment
        Value: !Ref Environment

  InspectorAssessmentTarget:
    Type: AWS::Inspector::AssessmentTarget
    Properties:
      AssessmentTargetName: !Ref Environment
      ResourceGroupArn: !GetAtt InspectorResourceGroup.Arn

  InspectorTemplate:
    Type: AWS::Inspector::AssessmentTemplate
    Properties:
      AssessmentTargetArn: !Ref InspectorAssessmentTarget
      AssessmentTemplateName: !Ref Environment
      DurationInSeconds: 900
      RulesPackageArns:
        - !FindInMap [InspectorSettings, !Ref "AWS::Region", CVERulesPackage]
        - !FindInMap [InspectorSettings, !Ref "AWS::Region", CISRulesPackage]
        - !FindInMap [InspectorSettings, !Ref "AWS::Region", NetworkReachabilityPackage]
        - !FindInMap [InspectorSettings, !Ref "AWS::Region", SecurityBestPracticesRulesPackage]

  CreateInspectorEventSubscriptionRole:
    Type: AWS::IAM::Role
    Description: SFM create inspector event subscription role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"

  CreateInspectorEventSubscriptionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: SFM create inspector event subscription policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - inspector:SubscribeToEvent
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${CreateInspectorEventSubscriptionFunction}:*
      Roles:
        - !Ref CreateInspectorEventSubscriptionRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: The * resource is needed for Inspector because it cannot specify resources for Inspector.

  #==================================================
  # This custom Lambda function will create Inspector resources.
  #==================================================
  CreateInspectorEventSubscriptionFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SFM-CreateInspectorResources
      Description: Server Fleet Management Solution - subscribes Inspector to SNS
      Handler: sfm-subscribe-inspector-to-event.lambda_handler
      MemorySize: 1024
      Role: !GetAtt CreateInspectorEventSubscriptionRole.Arn
      Runtime: python3.8
      Timeout: 10
      Environment:
        Variables:
          assessment_template_arn: !GetAtt InspectorTemplate.Arn
          assessment_notification_topic_arn: !Ref InspectorNotificationTopic
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], !Ref "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"], "sfm-subscribe-inspector-to-event.zip"]]

  #==================================================
  # CloudFormation uses this custom resource to invoke
  # the Lambda function to set SNS topic for Inspector.
  #================================================
  CreateInspectorResources:
    Type: Custom::CreateInspectorResources
    DependsOn: CreateInspectorEventSubscriptionPolicy
    Properties:
      ServiceToken: !GetAtt CreateInspectorEventSubscriptionFunction.Arn

  #================================================
  # Scheduled Inspector job
  # The assessment template ARN comes from the custom
  # Lambda resource.
  #================================================
  ScheduledInspectorJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: StartAssessmentRun
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - inspector:StartAssessmentRun
                Resource:
                  - "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The * resource is needed because it cannot specify resources for Inspector.

  ScheduledInspectorJob:
    Type: AWS::Events::Rule
    Properties:
      Description: Server Fleet Management Solution - Run Inspector Assessment Daily
      ScheduleExpression: rate(1 day) # run daily
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt CreateInspectorResources.AssessmentTemplateArn
          RoleArn: !GetAtt ScheduledInspectorJobRole.Arn
          Id: TargetRunV1

  #================================================
  # Roles for Inspector job completions
  #================================================
  RespondToInspectorFindingsRole:
    Type: AWS::IAM::Role
    Description: SFM respond to inspector agent ID findings role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: xray-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - xray:PutTelemetryRecords
                  - xray:PutTraceSegments
                Resource:
                  "*"
      Path: "/"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The * resource is needed because it cannot specify resources for x-ray.

  RespondToInspectorFindingsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: SFM respond to inspector agent ID findings policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - inspector:DescribeFindings
              - inspector:ListFindings
              - ssm:PutInventory
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${RespondToInspectorAgentIdFindingsFunction}:*
      Roles:
        - !Ref RespondToInspectorFindingsRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The * resource is needed because it cannot specify resources for Inspector and SSM.

  RespondToInspectorAssessmentCompleteRole:
    Type: AWS::IAM::Role
    Description: SFM respond to inspector assessment complete role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: xray-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - xray:PutTelemetryRecords
                  - xray:PutTraceSegments
                Resource:
                  "*"
      Path: "/"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The * resource is needed because it cannot specify resources for xray.

  RespondToInspectorAssessmentCompletePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: SFM respond to inspector assessment complete policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - inspector:ListAssessmentRunAgents
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Ref InspectorAgentIdNotificationTopic
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
              - !GetAtt SnsEncryptionKey.Arn
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${RespondToInspectorAssessmentCompleteFunction}:*
      Roles:
        - !Ref RespondToInspectorAssessmentCompleteRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: The * resource is needed because it cannot specify resources for Inspector.

  #==================================================
  # This custom Lambda function is triggered by Inspector job completions
  # and sends the findings to the instance SSM inventories.
  #==================================================
  RespondToInspectorAssessmentCompleteFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SFM-RespondToInspectorAssessmentCompleteFunction
      Description: |
        Server Fleet Management Solution - Responds to Inspector assessment completion notifcations and invokes
        the function to retrieve findings for each instance.
      Handler: sfm-respond-to-inspector-assessment-complete.lambda_handler
      MemorySize: 1024
      Role: !GetAtt RespondToInspectorAssessmentCompleteRole.Arn
      Runtime: python3.8
      Timeout: 180
      Environment:
        Variables:
          assessment_agent_id_notification_topic_arn: !Ref InspectorAgentIdNotificationTopic
          send_anonymous_data: !Sub ${SendAnonymousData}
          uuid: !Sub ${UUID}
      TracingConfig:
        Mode: Active
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], !Ref "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"], "sfm-respond-to-inspector-assessment-complete.zip"]]

  #==================================================
  # The RespondToInspectorFindings Lambda function will subscribe to the
  # SNS topic to which Inspector publishes its job completion status.
  #==================================================
  RespondToInspectorFindingsNotification:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref InspectorNotificationTopic
      Endpoint: !GetAtt RespondToInspectorAssessmentCompleteFunction.Arn
      Protocol: lambda

  #==================================================
  # This permission allows SNS to trigger the Lambda function.
  #==================================================
  RespondToInspectorFindingsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RespondToInspectorAssessmentCompleteFunction
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref InspectorNotificationTopic

  #==================================================
  # This custom Lambda function is triggered by the Lambda function that
  # responds to Inspector assessment run completions and then sends the
  # findings to the instance SSM inventories.
  #==================================================
  RespondToInspectorAgentIdFindingsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SFM-RespondToInspectorAgentIdFindingsFunction
      Description: |
        Server Fleet Management Solution - Responds to Inspector findings and sends the inventory to SSM
      Handler: sfm-respond-to-inspector-agent-id-findings.lambda_handler
      MemorySize: 1024
      Role: !GetAtt RespondToInspectorFindingsRole.Arn
      Runtime: python3.8
      Timeout: 180
      TracingConfig:
        Mode: Active
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], !Ref "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"], "sfm-respond-to-inspector-agent-id-findings.zip"]]

  #==================================================
  # The RespondToInspectorAgentIdFindingsFunction Lambda function will
  # subscribe to the SNS topic to which the Lambda agent function publishes.
  #==================================================
  RespondToInspectorAgentIdFindingsFunctionNotification:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref InspectorAgentIdNotificationTopic
      Endpoint: !GetAtt RespondToInspectorAgentIdFindingsFunction.Arn
      Protocol: lambda

  #==================================================
  # This permission allows SNS to trigger the Lambda function.
  #==================================================
  RespondToInspectorAgentIdFindingsFunctionPolicy:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RespondToInspectorAgentIdFindingsFunction
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref InspectorAgentIdNotificationTopic


#==================================================
# Outputs
#==================================================
Outputs:

  InspectorResourceGroup:
    Export:
      Name: !Sub ${AWS::StackName}-InspectorResourceGroup
    Value: !Ref InspectorResourceGroup

  InspectorAssessmentTarget:
    Export:
      Name: !Sub ${AWS::StackName}-InspectorAssessmentTarget
    Value: !Ref InspectorAssessmentTarget

  InspectorTemplate:
    Export:
      Name: !Sub ${AWS::StackName}-InspectorTemplate
    Value: !Ref InspectorTemplate
